#! /bin/bash
### BEGIN INIT INFO
# Provides:          kestrel_daemon
# Required-Start:    $remote_fs $network
# Required-Stop:     $remote_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: KestrelHPC's daemon
# Description:       
### END INIT INFO

# Author: Jon Ander Hern√°ndez <jonan.h@gmail.org>

[ -z "$KESTREL_SHARE" ] && KESTREL_SHARE=/usr/share/kestrel

# Load kestrel_lib
. "$KESTREL_SHARE"/defaults-lib

export_config

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="KestrelHPC's daemon"
NAME="kestrel-daemon"
DAEMON=/usr/sbin/$NAME
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

DESC_RPC="KestrelHPC's RPC"
NAME_RPC=kestrel_rpc.py
DAEMON_RPC=${KESTREL_DATA_DIR}/rpc/$NAME_RPC
PIDFILE_RPC=/var/run/$NAME_RPC.pid
SCRIPTNAME_RPC=/etc/init.d/$NAME_RPC

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0
[ -x "$DAEMON_RPC" ] || exit 0

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start() {
    local PIDFILE=$1
    local DAEMON=$2
    local DESC=$3
    local NAME=$4
    
    [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
    
	start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON \
	    > /dev/null
	
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
}

#
# Function that stops the daemon/service
#
do_stop(){
    local PIDFILE=$1
    local DAEMON=$2
    local DESC=$3
    local NAME=$4
    
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	
	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE
	
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	
	# Many daemons don't delete their pidfiles when they exit.
	rm -f $PIDFILE
}

check_and_start(){
    detect_iface

    if [ -n "${KESTREL_IFACE}" ]; then
        do_start $PIDFILE $DAEMON $DESC $NAME
        do_start $PIDFILE_RPC $DAEMON_RPC $DESC_RPC $NAME_RPC
    else
        log_failure_msg "KestrelHPC daemon: No network interface found with ip : \"${FRONTEND_IP}\"."
    fi
}

case "$1" in
  start)
    check_and_start
    ;;
  stop)
    do_stop $PIDFILE $DAEMON $DESC $NAME
    do_stop $PIDFILE_RPC $DAEMON_RPC $DESC_RPC $NAME_RPC
    ;;
  status)
    status_of_proc "$DAEMON" "$NAME" &&
    status_of_proc "$DAEMON_RPC" "$NAME_RPC" && exit 0 || exit $?
    ;;
  restart|force-reload)
    do_stop $PIDFILE $DAEMON $DESC $NAME
    do_stop $PIDFILE_RPC $DAEMON_RPC $DESC_RPC $NAME_RPC
    check_and_start
    ;;
  *)
    echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
    exit 3
    ;;
esac

:
