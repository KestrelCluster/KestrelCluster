#!/bin/bash

# Copyright (C) 2010 Jon Ander Hern√°ndez
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

[ -z "$KESTREL_SHARE" ] && KESTREL_SHARE=/usr/share/kestrel

# Loads the config from the config file default.conf, from the defaul.d dir
# and from the user's 

load_config() {
    # Source default config file
    [ -f ${KESTREL_SHARE}/default.conf ] && . ${KESTREL_SHARE}/default.conf

    # Source default config dir
    for configfile in ${KESTREL_SHARE}/default.d/*; do
        [ -e "$configfile" ] && . "$configfile"
    done

    # Load user's local config
    [ -f ${KESTREL_ETC}/kestrel.conf ] && . ${KESTREL_ETC}/kestrel.conf


    # Some variable normalizations
    # In the future we should add variable checking
    [[ "$HOME_MODE" =~ ^/?([^/]*)/?$ ]]
    HOME_MODE=${BASH_REMATCH[1]}
}

# All the functions defined in this library require the config is loaded
load_config


# Export config variables. This is useful for executing scripts under a chroot
# which require access to kestrel's config.

export_config() {
    for variable in \
        $(cat ${KESTREL_SHARE}/default.conf \
              ${KESTREL_SHARE}/default.d/* \
              ${KESTREL_ETC}/kestrel.conf 2>/dev/null | \
              sed -nr 's/^[[:space:]]*([A-Za-z0-9_]+)[[:space:]]*=.*$/\1/p' | \
              sort | uniq)
    do
        export $variable
    done
}


# detect_iface
# 
#     Detect the network interface associated to the FRONTEND_IP and export the
#     result as variable KESTREL_IFACE

detect_iface() {
    # Ensure FRONTEND_IP is a valid ip
    [[ ${FRONTEND_IP} =~ ${ip_re} ]] &&
    for net in /sys/class/net/*; do
        ifconfig ${net##*/} 2>/dev/null | grep -Eq "[^0-9]${FRONTEND_IP}[^0-9]"\
        && export KESTREL_IFACE=${net##*/}
    done
}


# Basic Regular expresions
###########################

group_re="[0-9A-Za-z_]+"
image_re="[0-9A-Za-z_]+"
node_re="[0-9]+"
hostname_re="${KESTREL_HOSTNAME}-${group_re}-${node_re}"

# Note: We could also use a shorter version of these RE using groups, but that
# add the complexity of taking into accound that group in each sed expression.
# Another option is to use a Perl RE and use Super sed, but that would require
# adding Super sed as a dependency.
ip_re="[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}"
mac_re="[0-9A-Fa-f]{2}\:[0-9A-Fa-f]{2}\:[0-9A-Fa-f]{2}"
mac_re="${mac_re}\:${mac_re}"

