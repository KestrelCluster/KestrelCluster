#!/bin/bash

# This script creates a new entry in the /etc/exports file for exporting
# "${image_name}" image. Since the exported directory has to be "mount binded" 
# to the real directory containing the image with nfs4, we also need to add an 
# entry on the fstab file for the "mount binding"

new_mount_dir=${NFS4_ROOT}/kestrel/${image_name}

install -d ${new_mount_dir}

# Remove old entries
sed -ri "/[^#]*[[:space:]].*\/kestrel\/${image_name}([^0-9A-Za-z]+|$)/d" /etc/fstab
sed -ri "/[^#]*\/kestrel\/${image_name}([^0-9A-Za-z]+|$)/d"              /etc/exports


comment="# Autogenerated by kestrel_reconfigure"

# Add the entry after the comment
sed -ri "/${comment}/a\
${image_dir} \t${new_mount_dir} \tnode \tbind \t0 \t0 \n\
/lib/modules/ \t${new_mount_dir}/lib/modules/ \tnode \tbind \t0 \t0 \
" /etc/fstab

sed -ri "/${comment}/a\
${new_mount_dir} *(ro,async,nohide,no_subtree_check,no_root_squash) \n\
${new_mount_dir}/lib/modules/ *(ro,async,nohide,no_subtree_check,no_root_squash) \
" /etc/exports


# Check if the image is already mounted somewhere else
mount_dir=$(mount | sed -rn \
           "s/.*[\ \t]([^\ \t]*\/kestrel\/${image_name})[\ \t]+.*/\1/p")

# If the new mount dir is different from the old one, mount bind to the new dir
# first and then umount the old one
if [[ "${mount_dir}" != "${new_mount_dir}" ]]; then

    mount --bind ${KESTREL_IMAGE_DIR}/${image_name} ${new_mount_dir}
    mount --bind /lib/modules ${new_mount_dir}/lib/modules
    
    # run_from_script prevents the nfs server inherits the flock's fd
    run_from_script /etc/init.d/nfs-kernel-server restart &>/dev/null

    if [ -n "${mount_dir}" ]; then
        umount ${mount_dir}/lib/modules > /dev/null 2>&1 
        umount ${mount_dir} > /dev/null 2>&1 
    fi
fi


# nfs4 requires the idmpad daemon
sed -ri '/^NEED_IDMAPD=[[:space:]]*/s/=.*/=yes/' \
        ${KESTREL_IMAGE_DIR}/${image_name}/etc/default/nfs-common



