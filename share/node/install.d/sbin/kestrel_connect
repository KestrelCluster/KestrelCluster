#!/usr/bin/env python

# This script is responsible for notifying the frontend via a rpc call that the 
# node is being start up.
#
# The node notifies the frontend :
#
#    - the num of real cpus (using the command "num-of-cpus")
#    - the node image (reading the file /etc/kestrel_image_name)
#    - the node group while being registered (reading the cmdline)
#
#
# Note : Do NOT modify this file! 
#
# This file depends on the frontend's ip and port, and it is recreated each time
# the image is reconfigured.

import sys, re
import xmlrpclib
import subprocess

# Create the xmlrpc client
s = xmlrpclib.ServerProxy("http://frontend:${KESTREL_RPC_PORT}")

# Execute command num-of-cpus, and read the result
num_cpus=subprocess.Popen( "num_of_cpus", 
                           shell=True, 
                           stdout=subprocess.PIPE, 
                           close_fds=True ).stdout.read()

# Read the name of the image
f = open('/etc/kestrel/image_name', 'r')
image=f.readline()
f.close()

if len(sys.argv) > 1:
    action=sys.argv[1]
else:
    action=""

# Check if the client is in register mode, and save also the group
if re.search("register",action):
    s.register(num_cpus, image)
else:
    s.connect(num_cpus, image)

