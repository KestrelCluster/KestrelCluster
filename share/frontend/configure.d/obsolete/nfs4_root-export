#!/bin/bash

# This script autodetects the current nfs4 root export. If there is not one or
# if there is not any export file, it will add the required lines while
# preserving any previous configuration.


# Autodetect or create the nfs4's pseudo filesystem's root dir
###############################################################

if [ -f /etc/exports ]; then
# Users should not customize the nfs4_root variable
if [ -e /etc/kestrel/kestrel.conf ] && \
   grep -Eq "^[[:space:]]*NFS4_ROOT[[:space:]]*=" ${KESTREL_ETC}/kestrel.conf
then
   echo "Warning, do not redefine NFS4_ROOT at ${KESTREL_ETC}/kestrel.conf, " \
        "Kestrel will autodetect your current nfs4's pseudo filesystem's " \
        "root. Instead modify your /etc/exports directly and rerun " \
        "kestrel_reconfigure."
   echo "Another option is to delete it and run kestrel_reconfigure to get a " \
        "new one. In this case the NFS4_ROOT variable will be used to create " \
        "the new nfs4's pseudo filesystem's root."
fi >&2

# Look for the nfs4's root export
root=$(sed -rn 's/^[[:space:]]*([^#\ \t]*)[[:space:]].*fsid=(0|root).*/\1/p' \
       /etc/exports)
fi


if [ -z "$root" ]; then
    echo -e "${NFS4_ROOT} \t*(ro,fsid=0,no_subtree_check,async)" >> /etc/exports

else
    if [[ "$root" != "${NFS4_ROOT}" ]]; then
        echo "# You already have a nfs4 root export :"
        echo "NFS4_ROOT=${root}"
        export NFS4_ROOT=$root
    fi > ${KESTREL_SHARE}/default.d/detected_nfs4_root
fi

# Ensure that the directory exists
install -d ${NFS4_ROOT}


# Ensure idmapd and stad daemon are enabled and running
########################################################

set_variable "NEED_STATD"  "yes" /etc/default/nfs-common
set_variable "NEED_IDMAPD" "yes" /etc/default/nfs-common


if [ -e /etc/init/idmapd.conf ]; then
    initctl stop idmapd
    initctl start idmapd

elif [ -x /etc/init.d/idmapd ]; then
    /etc/init.d/idmapd restart

elif [ -x /etc/init.d/nfs-common ]; then
    /etc/init.d/nfs-common restart

fi &> /dev/null


if [ -e /etc/init/statd.conf ]; then
    initctl stop statd
    initctl start statd

elif [ -x /etc/init.d/statd ]; then
    /etc/init.d/statd restart

fi &> /dev/null



# Advertice with a comment that the following lines are autogenerated
######################################################################

comment="# Autogenerated by kestrel_reconfigure"

if ! grep -q "${comment}" /etc/fstab; then
    echo -e "\n${comment}" >> /etc/fstab
fi

if ! grep -q "${comment}" /etc/exports; then
    echo -e "\n${comment}" >> /etc/exports
fi


# export the home directory
############################

# Check if we should mount the home directory using a nfs4 export
[[ "${HOME_FS}" =~ ^nfs[34]*$ ]] || continue

new_mount_dir=${NFS4_ROOT}/kestrel/home

install -d ${new_mount_dir}

# Remove the old entries
sed -ri "/[^#]*[[:space:]].*\/kestrel\/home[[:space:]]+/d" /etc/fstab
sed -ri "/[^#]*\/kestrel\/home[[:space:]]+/d"              /etc/exports
sed -ri "/[^#]*\/kestrel[[:space:]]+/d"                    /etc/exports

# Add the new entry after the comment
sed -ri "/${comment}/a\
/${HOME_MODE} \t${new_mount_dir} \tnode \tbind \t0 \t0 \
" /etc/fstab

sed -ri "/${comment}/a\
${new_mount_dir} *(rw,async,nohide,no_subtree_check,no_root_squash)
" /etc/exports

sed -ri "/${comment}/a\
${NFS4_ROOT}/kestrel *(rw,async,nohide,no_subtree_check,no_root_squash)
" /etc/exports


# Check if the image is already mounted somewhere else
mount_dir=$(mount | \
            sed -rn "s/.*[[:space:]](.*\/kestrel\/home)[[:space:]]+.*/\1/p")

# Check if the new mount dir is different from the old one
if [[ "${mount_dir}" != "${new_mount_dir}" ]]; then

    install -d /${HOME_MODE}
    
    mount --bind /${HOME_MODE} ${new_mount_dir}

    /etc/init.d/nfs-kernel-server restart &>/dev/null

    if [ -n "${mount_dir}" ]; then
        umount ${mount_dir}
    fi
fi

