#!/bin/bash

# Copyright (C) 2010 Jon Ander Hern√°ndez
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


[ -z "$KESTREL_SHARE" ] && KESTREL_SHARE=/usr/share/kestrel

# load kestrel_lib
. "$KESTREL_SHARE"/kestrel-lib

export_config

export OS_ARCHITECTURE=$(uname -m)
export OS_DISTRIBUTION=$(lsb_release -is)
export OS_CODENAME=$(lsb_release -cs)
export OS_RELEASE=$(lsb_release -rs)


reconfigure_image() {
    local image_name=$1
    local image_dir=${KESTREL_IMAGE_DIR}/${image_name}

    # Lock the image, so nobody can start any node while the image is being
    # modified
    (
        lock_image ${image_name}

        mount_chroot_image ${image_dir}

        [[ "${force}" == "true" ]] && install_node

        reconfigure_node

        sync 

        umount_chroot_image ${image_dir}
    )
}

_reconfigure_image() {
    local image_name=$1
    local image_dir=${KESTREL_IMAGE_DIR}/${image_name}

    check_image

    reconfigure_image ${image_name}
    echo
}


reconfigure_all() {
    reconfigure_frontend

    list_images | \
    while read image_name; do

        echo "Reconfiguring the image \"${image_name}\""

        # Verify the image is not being used by a node
        if [ -f ${KESTREL_IMAGE_DIR}/.${image_name}.running ]; then
            echo "The image ${image_name} is being used by some node"
            # Add a file that indicates that the image should be reconfigured
            # before is started again.
            touch ${KESTREL_IMAGE_DIR}/.${image_name}.reconfigure
            continue
        
        else
            reconfigure_image ${image_name}

        fi | sed -r 's/^/    /'
        echo
    done
}


reconfigure_enable() {
    install_frontend "install"
    
    force=true
    reconfigure_all
}

reconfigure_disable() {
    install_frontend "uninstall"
    echo
}

usage() {
echo "
Usage: ${0##*/} options

OPTIONS:

   --image [<image>]
     Reconfigure an image

   --frontend
     Reconfigure the frontend

   --all
     Reconfigure everything

   --force
     Also reinstalls the hooks and the packages
     
   --enable
     Enables kestrelHPC on the system
     
   --disable
     Disables kestrelHPC on the system

"
}


for param in $@; do
   [[ ${param} == "--force" ]] && force=true
done


# If no parameter is specified
(( $# == 0 )) && usage-error


while (( $# > 0 )); do
    case ${1} in
        --image)
            if [[ ! "${2}" =~ ^--.+ && -n "${2}" ]]; then
                image=$2
                shift
            else
                image=default
            fi
            
            _reconfigure_image "${image}"
            shift
            ;;

        --frontend|--all|--enable|--disable)
            # Ensure this script is executed as root
            check_root

            reconfigure_${1#--}
            ;;

        --force)
            ;;

        --version|-v)
            kestrel_version
            ;;

        --help|-h)
            usage
            ;;

        *)
            usage-error
            ;;
    esac
    shift
done
