#!/bin/bash
 
# This command helps handling nodes and groups of nodes :
#
# - Start up/reboot/halt nodes or group of nodes
# 
# - List connected/disconnected/registered nodes
# 
# - Add new nodes to a group
#
# Copyright (C) 2010, 2011 Jon Ander Hern√°ndez
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


[ -z   "$KESTREL_SHARE" ] && KESTREL_SHARE=/usr/share/kestrel
[ ! -d "$KESTREL_SHARE" ] && KESTREL_SHARE="${0%/*}/share"

# Load kestrel_lib
. "$KESTREL_SHARE"/kestrel-lib
. "$KESTREL_SHARE"/node-status-lib


# _check
# 
#     

_check() {
    unset SSH_AUTH_SOCK
    
    connected_nodes | while read node; do
        su kestrel -c "ssh ${node} true" &> /dev/null || {
            ip=$(hostname_2_ip ${node})
            mac=$(hostname_2_mac ${node})
            echo " action=disconnect ip=${ip} mac=${mac} hostname=${node} " \
                 > ${KESTREL_RPC_FIFO}
        } &
        wait $!
    done
}

usage() {
echo "
Usage: ${0##*/} options

OPTIONS:

   --check
     Check connected nodes
"
}

# If no parameter is specified
(( $# == 0 )) && usage-error


while (( $# > 0 )); do
    case $1 in
        --check)
            check_root
            
            _check
            ;;
            
        --version|-v)
            kestrel_version
            exit 0
            ;;

        --help|-h)
            usage
            exit 0
            ;;

        *)
            usage-error
            ;;
    esac
    shift
done
